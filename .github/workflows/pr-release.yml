name: pr release

on:
  workflow_run:
    workflows: [ pr ]
    types: [ completed ]

jobs:
  build:
    permissions:
      contents: read  # repo 
      checks: write   # junit test report
      actions: read   # gradle setup
  
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.5.0
        with:
          java-version: 21
          distribution: 'temurin'
      - uses: gradle/actions/setup-gradle@v4
      - run: ./gradlew test --continue --no-daemon --parallel
      - uses: dorny/test-reporter@v1.9.1
        if: success() || failure() # always() will run even if prev step crashes
        with:
          name: tests
          path: "**/**/build/test-results/test/TEST-*.xml"
          reporter: java-junit
          token: ${{ secrets.GITHUB_TOKEN }}


  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.workflow_run.conclusion == 'success'
    permissions:
      contents: write   # release notes
      packages: write   # maven artifact

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # include git tags

      - uses: actions/setup-java@v4.5.0
        with:
          java-version: 21
          distribution: 'temurin'

      - uses: gradle/actions/setup-gradle@v4
        with:
          cache-cleanup: always

      - uses: paulhatch/semantic-version@v5.4.0
        id: tag
        with:
          bump_each_commit: true
          tag_prefix: ""
          minor_pattern: "(MINOR)"
          major_pattern: "(MAJOR)"

      - id: notes
        run: |
          randomDelimiter=${RANDOM}
          text="$(git --no-pager log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h %s")"
          echo 'CHANGELOG<<$randomDelimiter' >> $GITHUB_OUTPUT
          echo $text >> $GITHUB_OUTPUT
          echo '$randomDelimiter' >> $GITHUB_OUTPUT

      - uses: actions/create-release@v1.1.4
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.version }}
          release_name: ${{ steps.tag.outputs.version }}
          body: |
            Changes in this Release
            ${{ steps.notes.outputs.CHANGELOG }}


      - run: ./gradlew -Pversion=${{ steps.tag.outputs.version}} publish

